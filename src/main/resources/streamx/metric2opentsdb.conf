job.env{
    job.name = "metricstore"
    execution.parallelism = 2
}

ddl {
    define = ""
}

source {
     ZorkDataKafkaStream {
        data.type = "metricavro"
        topics = "metric_avro_1000w"
        consumer.bootstrap.servers = "kafka03:9092"
        consumer.group.id = "metricstore"
        offset.reset="earliest"
        kafka.security.model="none"
        result_table_name = "ZorkDataKafkaStreamSource"
        parallelism = 2
    }
}

transform {
}

sink {
    ZorkDataMetricStore {
        metric.store.type = "opentsdb"
        open.url = "http://192.168.70.3:4242/api/put?summary?details=>1;http://192.168.70.4:4242/api/put?summary?details=>2"
        parallelism = 1
        batchSize = 5000
        scheduleTime = 3000
        poolManager.maxTotal = 2000
        poolManager.maxPerRoute = 100
    }
}